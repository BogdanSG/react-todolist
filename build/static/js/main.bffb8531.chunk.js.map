{"version":3,"sources":["components/app-drawer-provider/header/Header.jsx","contexts/app-drawer-context.js","ui-components/FlexMainContent.jsx","contexts/table-data-context.js","table-data-default-value.js","components/app-drawer-provider/content/table-data-provider/TableDataProvider.jsx","ui-components/Wrapper.jsx","ui-components/WrapItem.jsx","components/app-drawer-provider/content/table-data-provider/todo-drawer/TodoDrawer.jsx","components/app-drawer-provider/content/table-data-provider/todo-table/TodoTable.jsx","components/app-drawer-provider/content/Content.jsx","components/app-drawer-provider/footer/Footer.jsx","components/app-drawer-provider/AppDrawerProvider.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","AppDrawerContext","createContext","withStyles","theme","flexMainContent","padding","spacing","unit","flexGrow","overflow","_ref","children","classes","className","TableDataContext","table_data_default_value","id","task","deadline","done","TableDataProvider","_useState","useState","TableDataDefaultValue","_useState2","Object","slicedToArray","tableData","setTableData","table_data_context","Provider","value","wrapper","display","flexDirection","height","wrapItem","margin","concat","width","icon","alignSelf","marginRight","top","button","todoDrawer","minWidth","toolBar","justifyContent","textField","open","onClose","_useContext","useContext","replace","setDeadline","_useState3","_useState4","setTask","_useState5","deadlineError","taskError","_useState6","errors","setErrors","setDefaultState","closeDrawer","Drawer_default","ui_components_Wrapper","ui_components_FlexMainContent","ui_components_WrapItem","DateRange_default","TextField_default","required","error","label","type","onChange","e","target","InputLabelProps","shrink","Assignment_default","rowsMax","multiline","Button_default","onClick","taskTrim","trim","data","length","index","findIndex","elem","toConsumableArray","paper","& *","fontSize","table","whiteSpace","checkBox","menu","textDecoration","textCross","&:before","content","left","right","bottom","background","backgroundSize","rowDone","backgroundColor","taskCell","taskLabel","lineHeight","anchorEl","editDeleteMenu","setEditDeleteMenu","drawerIsOpen","setDrawerIsOpen","rowIndex","setRowIndex","openEditDrawer","setTimeout","Paper_default","elevation","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","react","key","onDoubleClick","Checkbox_default","checked","CheckBoxOutlineBlank_default","checkedIcon","CheckBox_default","Chip_default","AlarmOn_default","Alarm_default","IconButton_default","aria-label","aria-haspopup","currentTarget","MoreVert_default","Menu_default","PaperProps","style","maxHeight","MENU_ITEM_HEIGHT","MenuItem_default","disabled","splice","todo_drawer_TodoDrawer","Content","isDrawerOpen","setIsDrawerOpen","table_data_provider_TableDataProvider","todo_table_TodoTable","footer","marginTop","fabButton","Fab_default","Add_default","AppDrawerProvider","app_drawer_context","createMuiTheme","palette","primary","blue","typography","fontFamily","join","useNextVariants","App","styles","app_drawer_provider_AppDrawerProvider","header_Header","content_Content","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bffb8531.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          Header\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext } from \"react\";\r\n\r\nconst AppDrawerContext = createContext();\r\n\r\nexport default AppDrawerContext;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  flexMainContent: {\r\n    padding: theme.spacing.unit * 4,\r\n    flexGrow: 1,\r\n    overflow: \"auto\"\r\n  }\r\n});\r\n\r\nconst FlexMainContent = ({ children, classes }) => {\r\n  return <div className={classes.flexMainContent}>{children}</div>;\r\n}; //FlexMainContent\r\n\r\nexport default withStyles(styles)(FlexMainContent);\r\n","import { createContext } from \"react\";\r\n\r\nconst TableDataContext = createContext();\r\n\r\nexport default TableDataContext;\r\n","export default [\r\n  {\r\n    id: 1,\r\n    task: \"Breakfast\",\r\n    deadline: \"2019-01-04 06:17\",\r\n    done: false\r\n  },\r\n  {\r\n    id: 2,\r\n    task: \"Go for a walk\",\r\n    deadline: \"2019-01-26 14:28\",\r\n    done: false\r\n  },\r\n  {\r\n    id: 3,\r\n    task: \"Workout\",\r\n    deadline: \"2019-09-11 09:16\",\r\n    done: false\r\n  }\r\n];\r\n","import React, { useState } from \"react\";\r\nimport TableDataContext from \"../../../../contexts/table-data-context\";\r\nimport TableDataDefaultValue from \"../../../../table-data-default-value\";\r\n\r\nconst TableDataProvider = ({ children }) => {\r\n  const [tableData, setTableData] = useState(TableDataDefaultValue);\r\n\r\n  return (\r\n    <TableDataContext.Provider\r\n      value={{ tableData: tableData, setTableData: setTableData }}\r\n    >\r\n      {children}\r\n    </TableDataContext.Provider>\r\n  );\r\n}; //AppDrawerProvider\r\n\r\nexport default TableDataProvider;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\"\r\n  }\r\n};\r\n\r\nconst Wrapper = ({ children, classes }) => {\r\n  return <div className={classes.wrapper}>{children}</div>;\r\n}; //Wrapper\r\n\r\nexport default withStyles(styles)(Wrapper);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  wrapItem: {\r\n    margin: `0 0 ${theme.spacing.unit * 4}px 0`,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\"\r\n  },\r\n  icon: {\r\n    alignSelf: \"flex-start\",\r\n    color: \"rgba(0,0,0,0.54)\",\r\n    marginRight: 30,\r\n    position: \"relative\",\r\n    top: \"20px\"\r\n  }\r\n});\r\n\r\nconst WrapItem = ({ icon, children, classes }) => {\r\n  return (\r\n    <div className={classes.wrapItem}>\r\n      {icon && <div className={classes.icon}>{icon}</div>}\r\n      {children}\r\n    </div>\r\n  );\r\n}; //Wrapper\r\n\r\nexport default withStyles(styles)(WrapItem);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport TableDataContext from \"../../../../../contexts/table-data-context\";\r\nimport FlexMainContent from \"../../../../../ui-components/FlexMainContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Wrapper from \"../../../../../ui-components/Wrapper\";\r\nimport WrapItem from \"../../../../../ui-components/WrapItem\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    width: 100\r\n  },\r\n  todoDrawer: {\r\n    minWidth: 320,\r\n    height: \"100%\"\r\n  },\r\n  toolBar: {\r\n    justifyContent: \"space-between\"\r\n  },\r\n  textField: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst TodoDrawer = ({ classes, open, value, onClose }) => {\r\n  const { tableData, setTableData } = useContext(TableDataContext);\r\n\r\n  const [deadline, setDeadline] = useState(\r\n    value ? value.deadline.replace(\" \", \"T\") : \"\"\r\n  );\r\n\r\n  const [task, setTask] = useState(value ? value.task : \"\");\r\n\r\n  const [errors, setErrors] = useState({\r\n    deadlineError: false,\r\n    taskError: false\r\n  });\r\n\r\n  const saveTaskData = () => {\r\n    const taskTrim = task.trim();\r\n\r\n    if (!deadline || !taskTrim) {\r\n      setErrors({\r\n        deadlineError: !deadline,\r\n        taskError: !taskTrim\r\n      });\r\n    } //if\r\n    else {\r\n      const data = {\r\n        id: value\r\n          ? value.id\r\n          : tableData.length > 0\r\n          ? tableData[tableData.length - 1].id + 1\r\n          : 1,\r\n        task: taskTrim,\r\n        deadline: deadline.replace(\"T\", \" \"),\r\n        done: false\r\n      };\r\n\r\n      if (value) {\r\n        const index = tableData.findIndex(elem => elem.id === value.id);\r\n\r\n        tableData[index] = data;\r\n\r\n        setTableData([...tableData]);\r\n      } //if\r\n      else setTableData([...tableData, data]);\r\n\r\n      setDefaultState();\r\n      onClose();\r\n    } //else\r\n  };\r\n\r\n  const setDefaultState = () => {\r\n    if (!value) {\r\n      setDeadline(\"\");\r\n      setTask(\"\");\r\n    } //if\r\n    setErrors({\r\n      deadlineError: false,\r\n      taskError: false\r\n    });\r\n  }; //setDefaultState\r\n\r\n  const closeDrawer = () => {\r\n    setDefaultState();\r\n    onClose();\r\n  }; //closeDrawer\r\n\r\n  return (\r\n    <Drawer open={open} onClose={closeDrawer}>\r\n      <div className={classes.todoDrawer}>\r\n        <Wrapper>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">TodoDrawer</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <FlexMainContent>\r\n            <Wrapper>\r\n              <WrapItem icon={<DateRangeIcon />}>\r\n                <TextField\r\n                  required\r\n                  error={errors.deadlineError}\r\n                  label=\"Deadline\"\r\n                  type=\"datetime-local\"\r\n                  value={deadline}\r\n                  className={classes.textField}\r\n                  onChange={e => setDeadline(e.target.value)}\r\n                  InputLabelProps={{\r\n                    shrink: true\r\n                  }}\r\n                />\r\n              </WrapItem>\r\n              <WrapItem icon={<AssignmentIcon />}>\r\n                <TextField\r\n                  required\r\n                  error={errors.taskError}\r\n                  label=\"Task\"\r\n                  value={task}\r\n                  rowsMax=\"33\"\r\n                  onChange={e => setTask(e.target.value)}\r\n                  className={classes.textField}\r\n                  multiline\r\n                />\r\n              </WrapItem>\r\n            </Wrapper>\r\n          </FlexMainContent>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Toolbar className={classes.toolBar}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={saveTaskData}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button className={classes.button} onClick={closeDrawer}>\r\n                Cancel\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Wrapper>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}; //TodoDrawer\r\n\r\nexport default withStyles(styles)(TodoDrawer);\r\n","import React, { Fragment, useContext, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport AlarmOnIcon from \"@material-ui/icons/AlarmOn\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport TableDataContext from \"../../../../../contexts/table-data-context\";\r\nimport TodoDrawer from \"../todo-drawer/TodoDrawer\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    \"& *\": {\r\n      fontSize: 18\r\n    }\r\n  },\r\n  table: {\r\n    minWidth: 850\r\n  },\r\n  deadline: {\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  checkBox: {\r\n    fontSize: 32\r\n  },\r\n  menu: {\r\n    fontSize: 28\r\n  },\r\n  textDecoration: {\r\n    textDecoration: \"line-through\"\r\n  },\r\n  textCross: {\r\n    position: \"relative\",\r\n    overflow: \"unset\",\r\n    \"&:before\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      left: 0,\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      background: \"rgba(0, 0, 0, 0) url(./images/cross.svg) no-repeat\",\r\n      backgroundSize: \"100% 100%\"\r\n    }\r\n  },\r\n  rowDone: {\r\n    backgroundColor: \"#2196f31c\"\r\n  },\r\n  taskCell: {\r\n    padding: 15\r\n  },\r\n  taskLabel: {\r\n    display: \"inline-block\",\r\n    lineHeight: 1.2\r\n  }\r\n};\r\n\r\nconst MENU_ITEM_HEIGHT = 48;\r\n\r\nconst TodoTable = ({ classes }) => {\r\n  const { tableData, setTableData } = useContext(TableDataContext);\r\n\r\n  //const [editDeleteMenu, setEditDeleteMenu] = useState(null);\r\n  const [editDeleteMenu, setEditDeleteMenu] = useState({\r\n    anchorEl: null,\r\n    index: 0\r\n  });\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [rowIndex, setRowIndex] = useState(-1);\r\n\r\n  const openEditDrawer = index => {\r\n    if (index !== rowIndex) {\r\n      setRowIndex(index);\r\n      setTimeout(() => setDrawerIsOpen(true), 10);\r\n    } //if\r\n    else setDrawerIsOpen(true);\r\n  }; //openEditDrawer\r\n\r\n  return (\r\n    <Paper elevation={7} className={classes.paper}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Done</TableCell>\r\n            <TableCell align=\"center\">Task</TableCell>\r\n            <TableCell align=\"center\">Deadline</TableCell>\r\n            <TableCell align=\"center\" />\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tableData.map((row, index) => (\r\n            <Fragment key={index}>\r\n              <TableRow\r\n                onDoubleClick={() => {\r\n                  if (!row.done) openEditDrawer(index);\r\n                }}\r\n                className={row.done ? classes.rowDone : \"\"}\r\n              >\r\n                <TableCell align=\"center\">\r\n                  <Checkbox\r\n                    checked={row.done}\r\n                    icon={\r\n                      <CheckBoxOutlineBlankIcon className={classes.checkBox} />\r\n                    }\r\n                    checkedIcon={<CheckBoxIcon className={classes.checkBox} />}\r\n                    onChange={e => {\r\n                      row.done = e.target.checked;\r\n                      setTableData([...tableData]);\r\n                    }}\r\n                    color=\"primary\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.taskCell}>\r\n                  <label\r\n                    className={`${classes.taskLabel} ${\r\n                      row.done ? classes.textCross : \"\"\r\n                    }`}\r\n                  >\r\n                    {row.task}\r\n                  </label>\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.deadline}>\r\n                  <Chip\r\n                    icon={row.done ? <AlarmOnIcon /> : <AlarmIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    label={row.deadline}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Fragment>\r\n                    <IconButton\r\n                      aria-label=\"More\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={e =>\r\n                        setEditDeleteMenu({\r\n                          anchorEl: e.currentTarget,\r\n                          index: index\r\n                        })\r\n                      }\r\n                    >\r\n                      <MoreVertIcon className={classes.menu} />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"long-menu\"\r\n                      anchorEl={editDeleteMenu.anchorEl}\r\n                      open={!!editDeleteMenu.anchorEl}\r\n                      onClose={() =>\r\n                        setEditDeleteMenu({ anchorEl: null, index: index })\r\n                      }\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: MENU_ITEM_HEIGHT * 4.5,\r\n                          width: 200\r\n                        }\r\n                      }}\r\n                    >\r\n                      <MenuItem\r\n                        disabled={tableData[editDeleteMenu.index].done}\r\n                        onClick={() => {\r\n                          openEditDrawer(editDeleteMenu.index);\r\n                          setEditDeleteMenu({\r\n                            anchorEl: null,\r\n                            index: editDeleteMenu.index\r\n                          });\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        onClick={() => {\r\n                          tableData.splice(editDeleteMenu.index, 1);\r\n                          setTableData([...tableData]);\r\n                          setEditDeleteMenu({\r\n                            anchorEl: null,\r\n                            index: editDeleteMenu.index\r\n                          });\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </MenuItem>\r\n                      ))}\r\n                    </Menu>\r\n                  </Fragment>\r\n                </TableCell>\r\n              </TableRow>\r\n              {rowIndex === index && (\r\n                <TodoDrawer\r\n                  value={row}\r\n                  open={drawerIsOpen}\r\n                  onClose={() => {\r\n                    setDrawerIsOpen(false);\r\n                    //setRowIndex(-1);\r\n                  }}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\nexport default withStyles(styles)(TodoTable);\r\n","import React, { useContext } from \"react\";\r\nimport AppDrawerContext from \"../../../contexts/app-drawer-context\";\r\nimport FlexMainContent from \"../../../ui-components/FlexMainContent\";\r\nimport TableDataProvider from \"./table-data-provider/TableDataProvider\";\r\nimport TodoTable from \"./table-data-provider/todo-table/TodoTable\";\r\nimport TodoDrawer from \"./table-data-provider/todo-drawer/TodoDrawer\";\r\n\r\nconst Content = () => {\r\n  const { isDrawerOpen, setIsDrawerOpen } = useContext(AppDrawerContext);\r\n\r\n  return (\r\n    <FlexMainContent>\r\n      <TableDataProvider>\r\n        <TodoTable />\r\n        <TodoDrawer\r\n          value={null}\r\n          open={isDrawerOpen}\r\n          onClose={() => setIsDrawerOpen(false)}\r\n        />\r\n      </TableDataProvider>\r\n    </FlexMainContent>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React, { useContext } from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppDrawerContext from \"../../../contexts/app-drawer-context\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  footer: {\r\n    marginTop: 15\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    height: 70,\r\n    width: 70,\r\n    top: -35,\r\n    right: 70\r\n  }\r\n};\r\n\r\nconst Footer = ({ classes }) => {\r\n  const { setIsDrawerOpen } = useContext(AppDrawerContext);\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"primary\" className={classes.footer}>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          Footer\r\n        </Typography>\r\n        <Fab\r\n          color=\"secondary\"\r\n          aria-label=\"Add\"\r\n          onClick={() => setIsDrawerOpen(true)}\r\n          className={classes.fabButton}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React, { useState } from \"react\";\r\nimport AppDrawerContext from \"../../contexts/app-drawer-context\";\r\n\r\nconst AppDrawerProvider = ({ children }) => {\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <AppDrawerContext.Provider\r\n      value={{ isDrawerOpen: isDrawerOpen, setIsDrawerOpen: setIsDrawerOpen }}\r\n    >\r\n      {children}\r\n    </AppDrawerContext.Provider>\r\n  );\r\n}; //AppDrawerProvider\r\n\r\nexport default AppDrawerProvider;\r\n","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Header from \"./components/app-drawer-provider/header/Header\";\nimport Content from \"./components/app-drawer-provider/content/Content\";\nimport Footer from \"./components/app-drawer-provider/footer/Footer\";\nimport AppDrawerProvider from \"./components/app-drawer-provider/AppDrawerProvider\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Wrapper from \"./ui-components/Wrapper\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  },\n  typography: {\n    fontFamily: [\n      \"Roboto\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"Segoe UI\",\n      \"Arial\",\n      \"sans-serif\"\n    ].join(\",\"),\n    useNextVariants: true\n  }\n});\n\nconst App = ({ classes }) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppDrawerProvider>\n        <Wrapper>\n          <Header />\n          <Content />\n          <Footer />\n        </Wrapper>\n      </AppDrawerProvider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}